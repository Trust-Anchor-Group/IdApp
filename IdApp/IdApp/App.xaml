<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
			 xmlns:helpers="clr-namespace:IdApp.Helpers;assembly=IdApp"
			 xmlns:resx="clr-namespace:IdApp.Resx;assembly=IdApp"
			 xmlns:templatedSwitch="clr-namespace:IdApp.Controls.TemplatedSwitch;assembly=IdApp"
             x:Class="IdApp.App">
    <Application.Resources>
        <OnPlatform x:TypeArguments="x:String"
                    x:Key="FontAwesomeRegular">
            <On Platform="Android"
                Value="FontAwesome5Free-Regular-400.otf#Regular" />
            <On Platform="iOS"
                Value="FontAwesome5Free-Regular" />
        </OnPlatform>
        <OnPlatform x:TypeArguments="x:String"
                    x:Key="FontAwesomeSolid">
            <On Platform="Android"
                Value="FontAwesome5Free-Solid-900.otf#Regular" />
            <On Platform="iOS"
                Value="FontAwesome5Free-Solid" />
        </OnPlatform>
        <Color x:Key="HeadingForeground">White</Color>
        <Color x:Key="Primary">#202E40</Color>
        <Color x:Key="HeadingBackground">#202E40</Color>
        <Color x:Key="HeadingBackgroundLight">#536173</Color>
        <Color x:Key="HeadingBackgroundTranslucent">#cc202E40</Color>
        <Color x:Key="AccentColor">#BADA55</Color>
        <Color x:Key="AlertColor">Red</Color>
        <Color x:Key="PageBackgroundColor">White</Color>
        <Color x:Key="ForegroundColor">Black</Color>
        <Color x:Key="PendingColor">Salmon</Color>

        <Color x:Key="PageBackgroundColorLightTheme">White</Color>
        <Color x:Key="PageBackgroundColorDarkTheme">Black</Color>

        <Color x:Key="HeadingBackgroundLightTheme">#202E40</Color>
        <Color x:Key="HeadingBackgroundDarkTheme">#536173</Color>

        <Color x:Key="HeadingBackgroundTranslucentLightTheme">#cc202E40</Color>
        <Color x:Key="HeadingBackgroundTranslucentDarkTheme">#cc536173</Color>

        <Color x:Key="ForegroundColorLightTheme">Black</Color>
        <Color x:Key="ForegroundColorDarkTheme">White</Color>

        <Color x:Key="TextColorLightTheme">White</Color>
        <Color x:Key="TextColorDarkTheme">Black</Color>

        <Color x:Key="LabelTextColorLightTheme">Black</Color>
        <Color x:Key="LabelTextColorDarkTheme">White</Color>

        <Color x:Key="HeadingForegroundLightTheme">White</Color>
        <Color x:Key="HeadingForegroundDarkTheme">Black</Color>

        <Color x:Key="FrameLightTheme">#f0ffffff</Color>
        <Color x:Key="FrameDarkTheme">#f0000000</Color>

        <Thickness x:Key="LargeMargin">24</Thickness>
        <Thickness x:Key="DefaultMargin">12</Thickness>
        <Thickness x:Key="DefaultLeftOnlyMargin">12,0,0,0</Thickness>
        <Thickness x:Key="DefaultTopOnlyMargin">0,12,0,0</Thickness>
        <Thickness x:Key="DefaultTopAndBottomOnlyMargin">0,12,0,12</Thickness>
        <Thickness x:Key="DefaultRightOnlyMargin">0,0,12,0</Thickness>
        <Thickness x:Key="DefaultBottomOnlyMargin">0,0,0,12</Thickness>
        <Thickness x:Key="DefaultLeftRightMargin">12,0,12,0</Thickness>
        <Thickness x:Key="DefaultLeftRightAndBottomMargin">12,0,12,12</Thickness>
        <x:Int32 x:Key="DefaultLeftMargin">12</x:Int32>
        <x:Int32 x:Key="DefaultTopMargin">12</x:Int32>
        <x:Int32 x:Key="DefaultRightMargin">12</x:Int32>
        <x:Int32 x:Key="DefaultBottomMargin">12</x:Int32>
        <Style TargetType="Button"
               ApplyToDerivedTypes="True"
               CanCascade="True">
            <Setter Property="FontSize" Value="Medium" />
            <Setter Property="BackgroundColor"
                    Value="{AppThemeBinding Light={StaticResource HeadingBackgroundLightTheme}, Dark={StaticResource HeadingBackgroundDarkTheme}}" />
            <Setter Property="TextColor"
                    Value="{AppThemeBinding Light={StaticResource TextColorLightTheme}, Dark={StaticResource TextColorDarkTheme}}"/>
            <Setter Property="CornerRadius" Value="5" />
            <Style.Triggers>
                <Trigger TargetType="Button"
                         Property="IsEnabled"
                         Value="False">
                    <Setter Property="BackgroundColor"
                            Value="{AppThemeBinding Light={StaticResource HeadingBackgroundDarkTheme}, Dark={StaticResource HeadingBackgroundLightTheme}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button"
               x:Key="IconButton"
               ApplyToDerivedTypes="True"
               CanCascade="True">
            <Setter Property="FontSize" Value="Medium" />
            <Setter Property="BackgroundColor"  Value="{AppThemeBinding Light={StaticResource HeadingBackgroundLightTheme}, Dark={StaticResource HeadingBackgroundDarkTheme}}" />
            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource TextColorLightTheme}, Dark={StaticResource TextColorDarkTheme}}" />
            <Setter Property="CornerRadius" Value="4" />
            <Setter Property="HeightRequest" Value="40" />
            <Setter Property="WidthRequest" Value="40" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="VerticalOptions" Value="Start" />
        </Style>
		<Style TargetType="ImageButton"
			   x:Key="SvgIconButton"
               ApplyToDerivedTypes="True"
			   CanCascade="True">
			<Setter Property="BackgroundColor"  Value="{AppThemeBinding Light={StaticResource HeadingBackgroundLightTheme}, Dark={StaticResource HeadingBackgroundDarkTheme}}" />
			<Setter Property="CornerRadius" Value="4" />
			<Setter Property="HeightRequest" Value="40" />
			<Setter Property="WidthRequest" Value="40" />
			<Setter Property="Padding" Value="10" />
			<Setter Property="HorizontalOptions" Value="FillAndExpand" />
			<Setter Property="VerticalOptions" Value="Start" />
		</Style>

		<Style x:Key="Heading" TargetType="Label"
               ApplyToDerivedTypes="True"
               CanCascade="True">
            <Setter Property="FontSize" Value="Large" />
            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LabelTextColorLightTheme}, Dark={StaticResource LabelTextColorDarkTheme}}" />
            <Setter Property="Margin" Value="{StaticResource DefaultBottomOnlyMargin}" />
            <Setter Property="HorizontalOptions" Value="Center"/>
            <Setter Property="LineBreakMode" Value="WordWrap"/>
        </Style>
        <Style x:Key="LeftAlignedHeading" TargetType="Label"
               ApplyToDerivedTypes="True"
               CanCascade="True">
            <Setter Property="FontSize" Value="Large" />
            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LabelTextColorLightTheme}, Dark={StaticResource LabelTextColorDarkTheme}}" />
            <Setter Property="Margin" Value="{StaticResource DefaultBottomOnlyMargin}" />
            <Setter Property="HorizontalOptions" Value="StartAndExpand"/>
            <Setter Property="LineBreakMode" Value="WordWrap"/>
        </Style>
        <Style TargetType="Label"
               ApplyToDerivedTypes="True"
               CanCascade="True">
            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ForegroundColorLightTheme}, Dark={StaticResource ForegroundColorDarkTheme}}" />
        </Style>
        <Style TargetType="Label" x:Key="ValueLabel">
            <Setter Property="FontAttributes" Value="Bold"/>
            <Setter Property="LineBreakMode" Value="WordWrap"/>
            <Setter Property="VerticalOptions" Value="StartAndExpand"/>
        </Style>
        <Style TargetType="Label" x:Key="ClickableValueLabel">
            <Setter Property="FontAttributes" Value="Bold"/>
            <Setter Property="LineBreakMode" Value="WordWrap"/>
            <Setter Property="VerticalOptions" Value="StartAndExpand"/>
            <Setter Property="TextColor" Value="Blue"/>
        </Style>
		<Style TargetType="Span" x:Key="ClickableValueSpan">
			<Setter Property="FontAttributes" Value="Bold"/>
			<Setter Property="TextColor" Value="Blue"/>
		</Style>
		<Style TargetType="Span" x:Key="ValueSpan">
			<Setter Property="FontAttributes" Value="Bold"/>
		</Style>
		<Style TargetType="Label" x:Key="TableHeader">
            <Setter Property="FontAttributes" Value="Bold"/>
            <Setter Property="TextColor" Value="Black"/>
            <Setter Property="LineBreakMode" Value="WordWrap"/>
            <Setter Property="VerticalOptions" Value="StartAndExpand"/>
            <Setter Property="BackgroundColor" Value="LightGray"/>
            <Setter Property="FontSize" Value="Large"/>
        </Style>
        <Style TargetType="Label" x:Key="HyperlinkColor">
            <Setter Property="TextColor" Value="Blue"/>
        </Style>
        <Style TargetType="Label" x:Key="FormattedValueLabel">
            <Setter Property="LineBreakMode" Value="WordWrap"/>
            <Setter Property="VerticalOptions" Value="StartAndExpand"/>
        </Style>
        <Style TargetType="Label" x:Key="KeyLabel">
            <Setter Property="MinimumWidthRequest" Value="400"/>
            <Setter Property="LineBreakMode" Value="NoWrap"/>
            <Setter Property="VerticalOptions" Value="StartAndExpand"/>
        </Style>
        <Style TargetType="Label" x:Key="InfoText">
            <Setter Property="HorizontalOptions" Value="Center"/>
            <Setter Property="VerticalOptions" Value="CenterAndExpand"/>
            <Setter Property="FontSize" Value="Medium"/>
            <Setter Property="Margin" Value="0,5,0,10"/>
        </Style>
        <Style TargetType="Entry"
               ApplyToDerivedTypes="True"
               CanCascade="True">
			<Setter Property="BackgroundColor" Value="Transparent" />
			<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource TextColorLightTheme}, Dark={StaticResource TextColorDarkTheme}}" />
			<Setter Property="helpers:EntryProperties.BorderColor" Value="Gray" />
			<Setter Property="Margin" Value="{OnPlatform Android='4'}" />
		</Style>
        <Style TargetType="Picker"
               ApplyToDerivedTypes="True"
               CanCascade="True">
            <Setter Property="BackgroundColor">
                <OnPlatform x:TypeArguments="Color">
                    <On Platform="iOS">LightGray</On>
                    <On Platform="Android">Transparent</On>
                </OnPlatform>
            </Setter>
            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource TextColorLightTheme}, Dark={StaticResource TextColorDarkTheme}}" />
		</Style>
		<Style TargetType="templatedSwitch:TemplatedSwitch" x:Key="PasswordToggler">
			<Setter Property="ControlTemplate">
				<ControlTemplate>
					<Label FontFamily="{StaticResource FontAwesomeSolid}">
						<Label.Triggers>
							<DataTrigger TargetType="Label" Binding="{TemplateBinding IsToggled}" Value="True">
								<Setter Property="Text" Value="{Static resx:FontAwesome.EyeSlash}" />
							</DataTrigger>
							<DataTrigger TargetType="Label" Binding="{TemplateBinding IsToggled}" Value="False">
								<Setter Property="Text" Value="{Static resx:FontAwesome.Eye}" />
							</DataTrigger>
						</Label.Triggers>
					</Label>
				</ControlTemplate>
			</Setter>
			<Setter Property="IsToggled" Value="True" />
		</Style>
	</Application.Resources>
</Application>
