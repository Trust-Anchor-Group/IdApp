<?xml version="1.0" encoding="UTF-8"?>
<views:ContentBaseView xmlns="http://xamarin.com/schemas/2014/forms" 
                       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                       xmlns:views="clr-namespace:IdApp.Pages;assembly=IdApp"
                       xmlns:behaviors="clr-namespace:IdApp.Behaviors;assembly=IdApp"
                       xmlns:resx="clr-namespace:IdApp.Resx;assembly=IdApp"
                       xmlns:converters="clr-namespace:IdApp.Converters;assembly=IdApp"
                       xmlns:model="clr-namespace:IdApp.Pages.Registration.RegisterIdentity;assembly=IdApp"
                       x:DataType="model:RegisterIdentityViewModel"
                       x:Class="IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityView">
    <ContentView.Content>
        <ScrollView x:Name="RegistrationLayout" Orientation="Vertical" Margin="{StaticResource DefaultTopOnlyMargin}">
            <StackLayout Orientation="Vertical" Margin="{StaticResource DefaultMargin}">
                <!-- BEGIN HEADER -->
                <Frame Padding="1" CornerRadius="4" BorderColor="LightGray" HasShadow="False">
                    <Grid ColumnSpacing="4" RowSpacing="4" Padding="6" ColumnDefinitions="*,auto" RowDefinitions="auto,auto">
                        <Label Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"  VerticalOptions="Start"
                               Margin="{StaticResource DefaultRightOnlyMargin}"
                               Text="{x:Static resx:AppResources.PersonalLegalInfoText}" />

                        <Frame BorderColor="{StaticResource HeadingBackground}"
                               HeightRequest="100" WidthRequest="120" Grid.Column="1" Grid.Row="0"
                               Padding="0" CornerRadius="4" IsClippedToBounds="True" HasShadow="False">
                            <Grid>
                                <Image BackgroundColor="White" Aspect="AspectFill" Source="{Binding Path=Image}"
                                       IsVisible="{Binding Path=HasPhoto}" Rotation="{Binding Path=ImageRotation}"/>
                                <Label HorizontalOptions="Center" VerticalOptions="Center" FontSize="42"
                                       TextColor="{StaticResource HeadingBackground}"
                                       Text="{x:Static resx:FontAwesome.User}"
                                       FontFamily="{StaticResource FontAwesomeSolid}"
                                       IsVisible="{Binding Path=HasPhoto, Converter={converters:LogicalNot}}"/>
                            </Grid>
                        </Frame>

                        <Button x:Name="RemovePhotoButton" Grid.Column="1" Grid.Row="0" HorizontalOptions="Center"
                                Style="{StaticResource IconButton}" FontFamily="{StaticResource FontAwesomeRegular}"
                                Text="{x:Static resx:FontAwesome.TrashAlt}" Command="{Binding Path=RemovePhotoCommand}"
                                IsVisible="{Binding Path=HasPhoto}" />

                        <StackLayout Orientation="Horizontal" HorizontalOptions="FillAndExpand"
                                     Spacing="4" Grid.Column="1" Grid.Row="1">
                            <Button x:Name="AddPhotoButton"
                                Style="{StaticResource IconButton}" FontFamily="{StaticResource FontAwesomeSolid}"
                                Text="{x:Static resx:FontAwesome.Camera}" Command="{Binding Path=TakePhotoCommand}" />
                            <Button x:Name="PickPhotoButton"
                                Style="{StaticResource IconButton}" FontFamily="{StaticResource FontAwesomeRegular}"
                                Text="{x:Static resx:FontAwesome.Images}" Command="{Binding Path=PickPhotoCommand}" />
							
							<!-- A simple TapGestureRecognizer attached to an Image / Frame / Path will not support disabling the control
							     visually when ICommand.CanExecute returns false, like Button does, so we use a true Button overlayed
							     with an input transparent e-passport icon instead. -->
							<Grid IsVisible="{Binding Path=IsTest}">
								<Button Style="{StaticResource IconButton}" Command="{Binding Path=EPassportCommand}" />
								<Path Style="{StaticResource EPassportIcon}" InputTransparent="True" />
							</Grid>
                        </StackLayout>
                    </Grid>
                </Frame>
                <!-- END HEADER -->

                <StackLayout Orientation="Vertical">
                    <Label Text="{x:Static resx:AppResources.Country}" />
                    <StackLayout Orientation="Horizontal">
                        <Picker x:Name="CountryPicker" HorizontalOptions="FillAndExpand" Title="{x:Static resx:AppResources.Country}"
                                ItemsSource="{Binding Path=Countries}" SelectedItem="{Binding Path=SelectedCountry}"
                                IsEnabled="{Binding Path=IsBusy, Converter={converters:LogicalNot}}"/>
                        <Label Text="*" TextColor="{StaticResource AlertColor}" VerticalOptions="Center"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Entry x:Name="FirstNameEntry" HorizontalOptions="FillAndExpand"
                               IsSpellCheckEnabled="False" IsTextPredictionEnabled="False" Keyboard="Text" ReturnType="Next"
                               Placeholder="{x:Static resx:AppResources.FirstName}" Text="{Binding Path=FirstName}"
                               IsEnabled="{Binding Path=IsBusy, Converter={converters:LogicalNot}}">
                            <Entry.Behaviors>
                                <behaviors:SetFocusOnCompletedBehavior SetFocusTo="MiddleNamesEntry" BindingContext="{Binding BindingContext, Source={x:Reference RegistrationLayout}}"/>
                            </Entry.Behaviors>
                        </Entry>
                        <Label Text="*" TextColor="{StaticResource AlertColor}" VerticalOptions="Center"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Entry x:Name="MiddleNamesEntry" HorizontalOptions="FillAndExpand"
                               IsSpellCheckEnabled="False" IsTextPredictionEnabled="False" Keyboard="Text" ReturnType="Next"
                               Placeholder="{x:Static resx:AppResources.MiddleNames}" Text="{Binding Path=MiddleNames}"
                               IsEnabled="{Binding Path=IsBusy, Converter={converters:LogicalNot}}">
                            <Entry.Behaviors>
                                <behaviors:SetFocusOnCompletedBehavior SetFocusTo="LastNamesEntry" BindingContext="{Binding BindingContext, Source={x:Reference RegistrationLayout}}"/>
                            </Entry.Behaviors>
                        </Entry>
                        <Label Text="*" TextColor="Transparent" VerticalOptions="Center"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Entry x:Name="LastNamesEntry" HorizontalOptions="FillAndExpand"
                               IsSpellCheckEnabled="False" IsTextPredictionEnabled="False" Keyboard="Text" ReturnType="Next"
                               Placeholder="{x:Static resx:AppResources.LastNames}" Text="{Binding Path=LastNames}"
                               IsEnabled="{Binding Path=IsBusy, Converter={converters:LogicalNot}}">
                            <Entry.Behaviors>
                                <behaviors:SetFocusOnCompletedBehavior SetFocusTo="PersonalNumberEntry" BindingContext="{Binding BindingContext, Source={x:Reference RegistrationLayout}}"/>
                            </Entry.Behaviors>
                        </Entry>
                        <Label Text="*" TextColor="{StaticResource AlertColor}" VerticalOptions="Center"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Entry x:Name="PersonalNumberEntry" HorizontalOptions="FillAndExpand"
                               Keyboard="Plain" ReturnType="Next"
                               Placeholder="{Binding Path=PersonalNumberPlaceholder}" Text="{Binding Path=PersonalNumber}"
                               IsEnabled="{Binding Path=IsBusy, Converter={converters:LogicalNot}}">
                            <Entry.Behaviors>
                                <behaviors:SetFocusOnCompletedBehavior SetFocusTo="AddressEntry" BindingContext="{Binding BindingContext, Source={x:Reference RegistrationLayout}}"/>
                            </Entry.Behaviors>
                        </Entry>
                        <Label Text="*" TextColor="{StaticResource AlertColor}" VerticalOptions="Center"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Entry x:Name="AddressEntry" HorizontalOptions="FillAndExpand"
                               IsSpellCheckEnabled="False" IsTextPredictionEnabled="False" Keyboard="Text" ReturnType="Next"
                               Placeholder="{x:Static resx:AppResources.Address}" Text="{Binding Path=Address}"
                               IsEnabled="{Binding Path=IsBusy, Converter={converters:LogicalNot}}">
                            <Entry.Behaviors>
                                <behaviors:SetFocusOnCompletedBehavior SetFocusTo="Address2Entry" BindingContext="{Binding BindingContext, Source={x:Reference RegistrationLayout}}"/>
                            </Entry.Behaviors>
                        </Entry>
                        <Label Text="*" TextColor="{StaticResource AlertColor}" VerticalOptions="Center"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Entry x:Name="Address2Entry" HorizontalOptions="FillAndExpand"
                               IsSpellCheckEnabled="False" IsTextPredictionEnabled="False" Keyboard="Text" ReturnType="Next"
                               Placeholder="{x:Static resx:AppResources.Address2}" Text="{Binding Path=Address2}"
                               IsEnabled="{Binding Path=IsBusy, Converter={converters:LogicalNot}}">
                            <Entry.Behaviors>
                                <behaviors:SetFocusOnCompletedBehavior SetFocusTo="ZipCodeEntry" BindingContext="{Binding BindingContext, Source={x:Reference RegistrationLayout}}"/>
                            </Entry.Behaviors>
                        </Entry>
                        <Label Text="*" TextColor="Transparent" VerticalOptions="Center"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Entry x:Name="ZipCodeEntry" HorizontalOptions="FillAndExpand"
                               Keyboard="Plain" ReturnType="Next"
                               Placeholder="{x:Static resx:AppResources.ZipCode}" Text="{Binding Path=ZipCode}"
                               IsEnabled="{Binding Path=IsBusy, Converter={converters:LogicalNot}}">
                            <Entry.Behaviors>
                                <behaviors:SetFocusOnCompletedBehavior SetFocusTo="AreaEntry" BindingContext="{Binding BindingContext, Source={x:Reference RegistrationLayout}}"/>
                            </Entry.Behaviors>
                        </Entry>
                        <Label Text="*" TextColor="{StaticResource AlertColor}" VerticalOptions="Center"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Entry x:Name="AreaEntry" HorizontalOptions="FillAndExpand"
                               IsSpellCheckEnabled="False" IsTextPredictionEnabled="False" Keyboard="Text" ReturnType="Next"
                               Placeholder="{x:Static resx:AppResources.Area}" Text="{Binding Path=Area}"
                               IsEnabled="{Binding Path=IsBusy, Converter={converters:LogicalNot}}">
                            <Entry.Behaviors>
                                <behaviors:SetFocusOnCompletedBehavior SetFocusTo="CityEntry" BindingContext="{Binding BindingContext, Source={x:Reference RegistrationLayout}}"/>
                            </Entry.Behaviors>
                        </Entry>
                        <Label Text="*" TextColor="Transparent" VerticalOptions="Center"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Entry x:Name="CityEntry" HorizontalOptions="FillAndExpand"
                               IsSpellCheckEnabled="False" IsTextPredictionEnabled="False" Keyboard="Text" ReturnType="Next"
                               Placeholder="{x:Static resx:AppResources.City}" Text="{Binding Path=City}"
                               IsEnabled="{Binding Path=IsBusy, Converter={converters:LogicalNot}}">
                            <Entry.Behaviors>
                                <behaviors:SetFocusOnCompletedBehavior SetFocusTo="RegionEntry" BindingContext="{Binding BindingContext, Source={x:Reference RegistrationLayout}}"/>
                            </Entry.Behaviors>
                        </Entry>
                        <Label Text="*" TextColor="{StaticResource AlertColor}" VerticalOptions="Center"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Entry x:Name="RegionEntry" HorizontalOptions="FillAndExpand"
                               IsSpellCheckEnabled="False" IsTextPredictionEnabled="False" Keyboard="Text" ReturnType="Done"
                               Placeholder="{x:Static resx:AppResources.Region}" Text="{Binding Path=Region}" 
                               IsEnabled="{Binding Path=IsBusy, Converter={converters:LogicalNot}}" Focused="RegionEntry_Focused">
                            <Entry.Behaviors>
                                <behaviors:SetFocusOnCompletedBehavior SetFocusTo="RegisterButton" BindingContext="{Binding BindingContext, Source={x:Reference RegistrationLayout}}"/>
                            </Entry.Behaviors>
                        </Entry>
                        <Label Text="*" TextColor="Transparent" VerticalOptions="Center"/>
                    </StackLayout>
                    <ActivityIndicator IsVisible="{Binding Path=IsBusy}" IsRunning="{Binding Path=IsBusy}" Color="{StaticResource AccentColor}"/>
                    <Label x:Name="ConnectionState" HorizontalOptions="CenterAndExpand" Text="{Binding Path=ConnectionStateText}" IsVisible="{Binding Path=IsConnected, Converter={converters:LogicalNot}}"/>
                    <Button x:Name="RegisterButton" Text="{x:Static resx:AppResources.Register}" Command="{Binding Path=RegisterCommand}" Margin="{StaticResource DefaultTopAndBottomOnlyMargin}"/>
                </StackLayout>
            </StackLayout>
        </ScrollView>
    </ContentView.Content>
</views:ContentBaseView>
